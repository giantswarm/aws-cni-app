kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: aws-node
  namespace: kube-system
  labels:
    k8s-app: aws-node
spec:
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: "10%"
  selector:
    matchLabels:
      k8s-app: aws-node
  template:
    metadata:
      labels:
        k8s-app: aws-node
    spec:
      priorityClassName: system-node-critical
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: "beta.kubernetes.io/os"
                    operator: In
                    values:
                      - linux
                  - key: "beta.kubernetes.io/arch"
                    operator: In
                    values:
                      - amd64
                      - arm64
                  - key: eks.amazonaws.com/compute-type
                    operator: NotIn
                    values:
                      - fargate
              - matchExpressions:
                  - key: "kubernetes.io/os"
                    operator: In
                    values:
                      - linux
                  - key: "kubernetes.io/arch"
                    operator: In
                    values:
                      - amd64
                      - arm64
                  - key: eks.amazonaws.com/compute-type
                    operator: NotIn
                    values:
                      - fargate
      serviceAccountName: aws-node
      hostNetwork: true
      tolerations:
        - operator: Exists
      initContainers:
        - image: {{ .Values.image.registry }}/{{ .Values.image.initName }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          name: aws-vpc-cni-init
          env:
            - name: DISABLE_TCP_EARLY_DEMUX
              value: "false"
            - name: ENABLE_IPv4
              value: "true"
            - name: ENABLE_IPv6
              value: "false"
          securityContext:
            privileged: true
          volumeMounts:
            - mountPath: /host/opt/cni/bin
              name: cni-bin-dir
      containers:
        - image: {{ .Values.image.registry }}/{{ .Values.image.name }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: 61678
              name: metrics
          name: aws-node
          readinessProbe:
            exec:
              command: ["/app/grpc-health-probe", "-addr=:50051", "-connect-timeout=5s","-rpc-timeout=5s"]
            initialDelaySeconds: 10
            timeoutSeconds: 10
          livenessProbe:
            exec:
              command: ["/app/grpc-health-probe", "-addr=:50051", "-connect-timeout=5s","-rpc-timeout=5s"]
            initialDelaySeconds: 60
            timeoutSeconds: 10
          env:
            - name: ADDITIONAL_ENI_TAGS
              value: '{{ .Values.additionalTags }}'
            - name: AWS_VPC_K8S_CNI_LOGLEVEL
              value: INFO
            - name: AWS_VPC_K8S_PLUGIN_LOG_LEVEL
              value: INFO
            - name: AWS_VPC_K8S_CNI_LOG_FILE
              value: stdout
            - name: AWS_VPC_K8S_PLUGIN_LOG_FILE
              value: /host/var/log/aws-routed-eni/plugin.log
            - name: AWS_VPC_ENI_MTU
              value: "9001"
            - name: AWS_VPC_K8S_CNI_CONFIGURE_RPFILTER
              value: "false"
            - name: DISABLE_INTROSPECTION
              value: "false"
            - name: DISABLE_METRICS
              value: "false"
            - name: ENABLE_IPv4
              value: "true"
            - name: ENABLE_IPv6
              value: "false"
            - name: WARM_IP_TARGET
              value: "{{ .Values.warmIPTarget }}"
            - name: MINIMUM_IP_TARGET
              value: "{{ .Values.minimumIPTarget }}"
            ## Deviation from original manifest - 1
            ## This config value is important - See here https://github.com/aws/amazon-vpc-cni-k8s/blob/master/README.md#cni-configuration-variables
            - name: AWS_VPC_K8S_CNI_CUSTOM_NETWORK_CFG
              value: "true"
            ## Deviation from original manifest - 2
            ## setting custom ENI config annotation
            - name: ENI_CONFIG_LABEL_DEF
              value: "failure-domain.beta.kubernetes.io/zone"
            - name: MY_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            ## Deviation from original manifest - 3
            ## disable SNAT as we setup NATGW in the route tables
            - name: AWS_VPC_K8S_CNI_EXTERNALSNAT
              value: "{{ .Values.externalSNATEnabled }}"
            {{- if eq .Values.externalSNATEnabled false }}
            ## Deviation from original manifest - 4
            ## If we left this enabled, cross subnet communication doesn't work. Only affects ExternalSNAT=false.
            - name: AWS_VPC_K8S_CNI_RANDOMIZESNAT
              value: "none"
            {{- end }}
            {{- if eq .Values.prefixEnabled true }}
            ## Deviation from original manifest - 6
            ## If CNI prefix validation is enabled it will improve the speed of allocating IPs on a nitro based node (e.g. m5.2xlarge)
            ## By setting a annotation on the Cluster CR it can be enabled or disabled.
            - name: ENABLE_PREFIX_DELEGATION
              value: "true"
            - name: "WARM_PREFIX_TARGET"
              value: "1"
            {{- end }}
            ## Deviation from original manifest - 5
            ## Explicit interface naming
            - name: AWS_VPC_K8S_CNI_VETHPREFIX
              value: eni
          resources:
            requests:
              cpu: 30m
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
          volumeMounts:
            - mountPath: /host/opt/cni/bin
              name: cni-bin-dir
            - mountPath: /host/etc/cni/net.d
              name: cni-net-dir
            - mountPath: /host/var/log/aws-routed-eni
              name: log-dir
            - mountPath: /var/run/aws-node
              name: run-dir
            - mountPath: /var/run/cri.sock
              name: cri
            - mountPath: /run/xtables.lock
              name: xtables-lock
      volumes:
        - name: cni-bin-dir
          hostPath:
            path: /opt/cni/bin
        - name: cni-net-dir
          hostPath:
            path: /etc/cni/net.d
        - name: cri
          hostPath:
            path: /var/run/containerd/containerd.sock
        - hostPath:
            path: /run/xtables.lock
          name: xtables-lock
        - hostPath:
            path: /var/log/aws-routed-eni
            type: DirectoryOrCreate
          name: log-dir
        - hostPath:
            path: /var/run/aws-node
            type: DirectoryOrCreate
          name: run-dir
